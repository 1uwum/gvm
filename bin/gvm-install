#!/bin/bash
mkdir -p $GVM_ROOT/gos > /dev/null 2>&1
if [[ $1 == "install" ]]; then
  if [[ -n $2 ]]; then
    curl -s https://go.googlecode.com/hg/.hgtags | grep "$2" > /dev/null 2>&1
    if [[ $? == 0 ]]; then
      REVISION=`curl -s https://go.googlecode.com/hg/.hgtags | grep "$2" | tail -n 1 | awk '{print $2;exit(0);}'`
      INSTALL_ROOT=$GVM_ROOT/gos/$REVISION
      echo "Installing version $REVISION"
      echo " * Downloading..."
      hg clone -u $REVISION https://go.googlecode.com/hg/ $INSTALL_ROOT > $GVM_ROOT/download.log 2>&1
      if [[ $? == 0 ]]; then
        echo " * Compiling..."
      else
        echo "Failed to download version $REVISION. See logs in $GVMROOT/download.log for details"
        exit 1
      fi
      cd $INSTALL_ROOT/src && unset GOROOT && unset GOARCH && unset GOOS && unset GOPATH && ./all.bash > $INSTALL_ROOT/install.log 2>&1
      if [[ $? == 0 ]]; then
        mkdir -p $GVM_ROOT/pkgsets/$REVISION
        exit 0
      else
        echo "Failed to install version $REVISION. See logs in $INSTALL_ROOT/install.log for details"
        exit 1
      fi
    else
      echo "ERROR: Unknown go release version: '$2'"
    fi
  else
    echo "ERROR: Please specifiy the version"
    exit 1
  fi
else
  echo "Please use gvm [action] to call this file"
  exit 1
fi

